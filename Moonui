--[[
    🌙 MoonUI Pro - المكتبة المتطورة والاحترافية
    ✨ تصميم متجاوب يناسب جميع الأجهزة
    🎯 مميزات متقدمة واحترافية
]]

local MoonUI = {}
MoonUI.__index = MoonUI

-- إصدار المكتبة
MoonUI.Version = "v2.1.0 Pro"

-- نظام الألوان المتطور
MoonUI.Themes = {
    Dark = {
        Primary = Color3.fromRGB(114, 137, 218),
        Secondary = Color3.fromRGB(78, 93, 148),
        Background = Color3.fromRGB(25, 28, 35),
        Card = Color3.fromRGB(35, 38, 45),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(200, 200, 200),
        Success = Color3.fromRGB(67, 181, 129),
        Error = Color3.fromRGB(240, 71, 71),
        Warning = Color3.fromRGB(255, 186, 0),
        Info = Color3.fromRGB(70, 170, 255)
    },
    Light = {
        Primary = Color3.fromRGB(70, 130, 255),
        Secondary = Color3.fromRGB(50, 100, 200),
        Background = Color3.fromRGB(245, 245, 245),
        Card = Color3.fromRGB(255, 255, 255),
        Text = Color3.fromRGB(30, 30, 30),
        TextSecondary = Color3.fromRGB(100, 100, 100),
        Success = Color3.fromRGB(56, 161, 105),
        Error = Color3.fromRGB(220, 60, 60),
        Warning = Color3.fromRGB(225, 165, 0),
        Info = Color3.fromRGB(60, 150, 255)
    },
    Purple = {
        Primary = Color3.fromRGB(158, 90, 255),
        Secondary = Color3.fromRGB(120, 65, 200),
        Background = Color3.fromRGB(30, 25, 40),
        Card = Color3.fromRGB(45, 38, 60),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(200, 180, 220),
        Success = Color3.fromRGB(67, 181, 129),
        Error = Color3.fromRGB(240, 71, 71),
        Warning = Color3.fromRGB(255, 186, 0),
        Info = Color3.fromRGB(158, 90, 255)
    }
}

-- إنشاء المكتبة الرئيسية
function MoonUI:Create(config)
    local self = setmetatable({}, MoonUI)
    
    -- الإعدادات الأساسية
    self.Config = {
        Name = config.Name or "MoonUI Pro",
        Keybind = config.Keybind or Enum.KeyCode.RightShift,
        Theme = config.Theme or "Dark",
        AutoScale = config.AutoScale ~= false, -- تفعيل التحجيم التلقائي
        DefaultSize = config.DefaultSize or UDim2.new(0, 450, 0, 600)
    }
    
    self.Elements = {}
    self.Tabs = {}
    self.IsOpen = false
    self.CurrentTheme = MoonUI.Themes[self.Config.Theme]
    
    -- خدمات الروبلوكس
    self.Players = game:GetService("Players")
    self.TweenService = game:GetService("TweenService")
    self.UserInputService = game:GetService("UserInputService")
    self.RunService = game:GetService("RunService")
    
    -- إنشاء الواجهة
    self:CreateMainUI()
    self:CreateWatermark()
    self:CreateNotifications()
    self:SetupInput()
    self:CreateMobileButton() -- زر للموبايل
    
    return self
end

-- حساب الحجم المناسب للشاشة
function MoonUI:CalculateSize()
    if not self.Config.AutoScale then
        return self.Config.DefaultSize
    end
    
    local viewportSize = self.UserInputService:GetScreenResolution()
    local baseSize = Vector2.new(1920, 1080) -- الحجم الأساسي
    
    -- حساب النسبة
    local scaleX = viewportSize.X / baseSize.X
    local scaleY = viewportSize.Y / baseSize.Y
    local scale = math.min(scaleX, scaleY) * 0.8 -- 80% من الحجم الأصلي
    
    -- الحد الأدنى والأقصى للحجم
    scale = math.clamp(scale, 0.6, 1.2)
    
    local width = self.Config.DefaultSize.X.Offset * scale
    local height = self.Config.DefaultSize.Y.Offset * scale
    
    return UDim2.new(0, width, 0, height)
end

-- إنشاء الواجهة الرئيسية
function MoonUI:CreateMainUI()
    -- الشاشة الرئيسية
    self.MainScreen = Instance.new("ScreenGui")
    self.MainScreen.Name = "MoonUIPro"
    self.MainScreen.ResetOnSpawn = false
    self.MainScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    self.MainScreen.DisplayOrder = 999
    self.MainScreen.Parent = game:GetService("CoreGui")
    
    -- الخلفية الشفافة
    self.Background = Instance.new("Frame")
    self.Background.Size = UDim2.new(1, 0, 1, 0)
    self.Background.BackgroundColor3 = Color3.new(0, 0, 0)
    self.Background.BackgroundTransparency = 0.6
    self.Background.Visible = false
    self.Background.ZIndex = 1
    self.Background.Parent = self.MainScreen
    
    -- النافذة الرئيسية
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Size = self:CalculateSize()
    self.MainFrame.Position = UDim2.new(0.5, -self.MainFrame.Size.X.Offset/2, 0.5, -self.MainFrame.Size.Y.Offset/2)
    self.MainFrame.BackgroundColor3 = self.CurrentTheme.Background
    self.MainFrame.ClipsDescendants = true
    self.MainFrame.Visible = false
    self.MainFrame.ZIndex = 2
    self.MainFrame.Parent = self.MainScreen
    
    -- الزوايا المستديرة
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = self.MainFrame
    
    -- الظل المتطور
    local shadow = Instance.new("UIStroke")
    shadow.Color = Color3.new(0, 0, 0)
    shadow.Thickness = 3
    shadow.Transparency = 0.8
    shadow.Parent = self.MainFrame
    
    -- تأثير التوهج
    local glow = Instance.new("UIStroke")
    glow.Color = self.CurrentTheme.Primary
    glow.Thickness = 1
    glow.Transparency = 0.8
    glow.Enabled = false
    glow.Parent = self.MainFrame
    
    self.GlowEffect = glow
    
    -- إنشاء المكونات
    self:CreateHeader()
    self:CreateContentArea()
    self:CreateToggleButton()
    self:CreateMiniMap() -- خريطة مصغرة
    
    -- تحديث الحجم تلقائياً
    self:SetupAutoResize()
end

-- إعداد التغيير التلقائي للحجم
function MoonUI:SetupAutoResize()
    self.UserInputService.WindowFocused:Connect(function()
        self:UpdateSize()
    end)
    
    self.UserInputService.WindowFocusReleased:Connect(function()
        self:UpdateSize()
    end)
end

-- تحديث الحجم
function MoonUI:UpdateSize()
    if self.Config.AutoScale and self.MainFrame then
        local newSize = self:CalculateSize()
        self.MainFrame.Size = newSize
        self.MainFrame.Position = UDim2.new(0.5, -newSize.X.Offset/2, 0.5, -newSize.Y.Offset/2)
    end
end

-- إنشاء رأس النافذة
function MoonUI:CreateHeader()
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = self.CurrentTheme.Card
    header.ZIndex = 3
    header.Parent = self.MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = header
    
    -- الشعار
    local logo = Instance.new("TextLabel")
    logo.Size = UDim2.new(0, 40, 0, 40)
    logo.Position = UDim2.new(0, 10, 0.5, -20)
    logo.BackgroundTransparency = 1
    logo.Text = "🌙"
    logo.TextColor3 = self.CurrentTheme.Primary
    logo.TextSize = 20
    logo.Font = Enum.Font.GothamBold
    logo.ZIndex = 4
    logo.Parent = header
    
    -- العنوان
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 60, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = self.Config.Name
    title.TextColor3 = self.CurrentTheme.Text
    title.TextSize = 18
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.ZIndex = 4
    title.Parent = header
    
    -- الإصدار
    local version = Instance.new("TextLabel")
    version.Size = UDim2.new(0, 60, 0, 20)
    version.Position = UDim2.new(0, 60, 1, -25)
    version.BackgroundTransparency = 1
    version.Text = MoonUI.Version
    version.TextColor3 = self.CurrentTheme.TextSecondary
    version.TextSize = 10
    version.Font = Enum.Font.Gotham
    version.TextXAlignment = Enum.TextXAlignment.Left
    version.ZIndex = 4
    version.Parent = header
    
    -- أزرار التحكم
    self:CreateControlButtons(header)
end

-- إنشاء أزرار التحكم
function MoonUI:CreateControlButtons(header)
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Size = UDim2.new(0, 80, 1, 0)
    buttonContainer.Position = UDim2.new(1, -90, 0, 0)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.ZIndex = 4
    buttonContainer.Parent = header
    
    local layout = Instance.new("UIListLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    layout.VerticalAlignment = Enum.VerticalAlignment.Center
    layout.Padding = UDim.new(0, 5)
    layout.Parent = buttonContainer
    
    -- زر التصغير
    local minimizeBtn = self:CreateControlButton("−", self.CurrentTheme.Warning)
    minimizeBtn.Parent = buttonContainer
    
    -- زر الإغلاق
    local closeBtn = self:CreateControlButton("×", self.CurrentTheme.Error)
    closeBtn.Parent = buttonContainer
    
    -- أحداث الأزرار
    minimizeBtn.MouseButton1Click:Connect(function()
        self:Minimize()
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        self:Toggle()
    end)
end

-- إنشاء زر تحكم
function MoonUI:CreateControlButton(text, color)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 25, 0, 25)
    button.BackgroundColor3 = color
    button.Text = text
    button.TextColor3 = Color3.new(1, 1, 1)
    button.TextSize = 14
    button.Font = Enum.Font.GothamBold
    button.AutoButtonColor = false
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    -- تأثيرات Hover
    button.MouseEnter:Connect(function()
        self.TweenService:Create(
            button,
            TweenInfo.new(0.2),
            {BackgroundTransparency = 0.3}
        ):Play()
    end)
    
    button.MouseLeave:Connect(function()
        self.TweenService:Create(
            button,
            TweenInfo.new(0.2),
            {BackgroundTransparency = 0}
        ):Play()
    end)
    
    return button
end

-- إنشاء منطقة المحتوى
function MoonUI:CreateContentArea()
    -- تبويبات التنقل
    self.TabButtonsFrame = Instance.new("Frame")
    self.TabButtonsFrame.Size = UDim2.new(1, -20, 0, 40)
    self.TabButtonsFrame.Position = UDim2.new(0, 10, 0, 60)
    self.TabButtonsFrame.BackgroundColor3 = self.CurrentTheme.Card
    self.TabButtonsFrame.ZIndex = 3
    self.TabButtonsFrame.Parent = self.MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.TabButtonsFrame
    
    -- منطقة المحتوى الرئيسية
    self.ContentFrame = Instance.new("Frame")
    self.ContentFrame.Size = UDim2.new(1, -20, 1, -120)
    self.ContentFrame.Position = UDim2.new(0, 10, 0, 110)
    self.ContentFrame.BackgroundTransparency = 1
    self.ContentFrame.ZIndex = 2
    self.ContentFrame.Parent = self.MainFrame
    
    self.TabContent = Instance.new("Frame")
    self.TabContent.Size = UDim2.new(1, 0, 1, 0)
    self.TabContent.BackgroundTransparency = 1
    self.TabContent.Parent = self.ContentFrame
    
    local scrolling = Instance.new("ScrollingFrame")
    scrolling.Size = UDim2.new(1, 0, 1, 0)
    scrolling.BackgroundTransparency = 1
    scrolling.ScrollBarThickness = 4
    scrolling.ScrollBarImageColor3 = self.CurrentTheme.Primary
    scrolling.ScrollingDirection = Enum.ScrollingDirection.Y
    scrolling.Parent = self.TabContent
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = scrolling
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 5)
    padding.PaddingLeft = UDim.new(0, 5)
    padding.PaddingRight = UDim.new(0, 5)
    padding.Parent = scrolling
end

-- إنشاء زر تبديل متطور
function MoonUI:CreateToggleButton()
    self.ToggleButton = Instance.new("TextButton")
    self.ToggleButton.Size = UDim2.new(0, 60, 0, 60)
    self.ToggleButton.Position = UDim2.new(1, -80, 0, 20)
    self.ToggleButton.BackgroundColor3 = self.CurrentTheme.Primary
    self.ToggleButton.Text = "🌙"
    self.ToggleButton.TextColor3 = Color3.new(1, 1, 1)
    self.ToggleButton.TextSize = 24
    self.ToggleButton.Font = Enum.Font.GothamBold
    self.ToggleButton.ZIndex = 10
    self.ToggleButton.Parent = self.MainScreen
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = self.ToggleButton
    
    local shadow = Instance.new("UIStroke")
    shadow.Color = Color3.new(0, 0, 0)
    shadow.Thickness = 3
    shadow.Transparency = 0.3
    shadow.Parent = self.ToggleButton
    
    -- تأثير التوهج
    local glow = Instance.new("UIStroke")
    glow.Color = self.CurrentTheme.Primary
    glow.Thickness = 2
    glow.Transparency = 0.5
    glow.Parent = self.ToggleButton
    
    -- تأثيرات متطورة
    self.ToggleButton.MouseEnter:Connect(function()
        self.TweenService:Create(
            self.ToggleButton,
            TweenInfo.new(0.3),
            {
                Size = UDim2.new(0, 65, 0, 65),
                BackgroundColor3 = self.CurrentTheme.Secondary,
                Rotation = 10
            }
        ):Play()
    end)
    
    self.ToggleButton.MouseLeave:Connect(function()
        self.TweenService:Create(
            self.ToggleButton,
            TweenInfo.new(0.3),
            {
                Size = UDim2.new(0, 60, 0, 60),
                BackgroundColor3 = self.CurrentTheme.Primary,
                Rotation = 0
            }
        ):Play()
    end)
    
    self.ToggleButton.MouseButton1Click:Connect(function()
        self:Toggle()
    end)
    
    -- إمكانية السحب
    self:MakeDraggable(self.ToggleButton)
end

-- إنشاء زر للموبايل
function MoonUI:CreateMobileButton()
    if self.UserInputService.TouchEnabled then
        local mobileBtn = Instance.new("TextButton")
        mobileBtn.Size = UDim2.new(0, 80, 0, 80)
        mobileBtn.Position = UDim2.new(0, 20, 1, -100)
        mobileBtn.BackgroundColor3 = self.CurrentTheme.Primary
        mobileBtn.Text = "📱"
        mobileBtn.TextColor3 = Color3.new(1, 1, 1)
        mobileBtn.TextSize = 30
        mobileBtn.Font = Enum.Font.GothamBold
        mobileBtn.ZIndex = 10
        mobileBtn.Visible = false
        mobileBtn.Parent = self.MainScreen
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = mobileBtn
        
        mobileBtn.MouseButton1Click:Connect(function()
            self:Toggle()
        end)
        
        self.MobileButton = mobileBtn
    end
end

-- جعل العنصر قابل للسحب
function MoonUI:MakeDraggable(element)
    local dragging = false
    local dragInput, dragStart, startPos
    
    element.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = element.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    element.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    self.UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            element.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- إنشاء العلامة المائية المتطورة
function MoonUI:CreateWatermark()
    self.Watermark = Instance.new("Frame")
    self.Watermark.Size = UDim2.new(0, 250, 0, 35)
    self.Watermark.Position = UDim2.new(0, 10, 0, 10)
    self.Watermark.BackgroundColor3 = self.CurrentTheme.Card
    self.Watermark.BackgroundTransparency = 0.2
    self.Watermark.ZIndex = 5
    self.Watermark.Parent = self.MainScreen
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.Watermark
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = self.CurrentTheme.Primary
    stroke.Thickness = 1
    stroke.Transparency = 0.5
    stroke.Parent = self.Watermark
    
    local layout = Instance.new("UIListLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    layout.VerticalAlignment = Enum.VerticalAlignment.Center
    layout.Padding = UDim.new(0, 10)
    layout.Parent = self.Watermark
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.Parent = self.Watermark
    
    -- الشعار
    local logo = Instance.new("TextLabel")
    logo.Size = UDim2.new(0, 30, 0, 30)
    logo.BackgroundTransparency = 1
    logo.Text = "🌙"
    logo.TextColor3 = self.CurrentTheme.Primary
    logo.TextSize = 16
    logo.Font = Enum.Font.GothamBold
    logo.Parent = self.Watermark
    
    -- المعلومات
    local info = Instance.new("TextLabel")
    info.Size = UDim2.new(1, -40, 1, 0)
    info.BackgroundTransparency = 1
    info.Text = "MoonUI Pro | FPS: 60 | Ping: 20ms"
    info.TextColor3 = self.CurrentTheme.Text
    info.TextSize = 12
    info.Font = Enum.Font.Gotham
    info.TextXAlignment = Enum.TextXAlignment.Left
    info.Parent = self.Watermark
    
    self.WatermarkInfo = info
    
    -- تحديث المعلومات باستمرار
    self:StartWatermarkUpdates()
end

-- تحديث العلامة المائية
function MoonUI:StartWatermarkUpdates()
    task.spawn(function()
        while task.wait(1) do
            if self.WatermarkInfo then
                local fps = math.random(55, 65) -- محاكاة FPS
                local ping = math.random(15, 35) -- محاكاة Ping
                local time = os.date("%H:%M:%S")
                
                self.WatermarkInfo.Text = string.format(
                    "MoonUI Pro | FPS: %d | Ping: %dms | %s",
                    fps, ping, time
                )
            end
        end
    end)
end

-- إنشاء الخريطة المصغرة
function MoonUI:CreateMiniMap()
    self.MiniMap = Instance.new("Frame")
    self.MiniMap.Size = UDim2.new(0, 120, 0, 120)
    self.MiniMap.Position = UDim2.new(1, -140, 1, -140)
    self.MiniMap.BackgroundColor3 = self.CurrentTheme.Card
    self.MiniMap.BackgroundTransparency = 0.3
    self.MiniMap.ZIndex = 5
    self.MiniMap.Visible = false
    self.MiniMap.Parent = self.MainScreen
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.MiniMap
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Mini Map"
    title.TextColor3 = self.CurrentTheme.Text
    title.TextSize = 12
    title.Font = Enum.Font.GothamBold
    title.Parent = self.MiniMap
    
    -- سيتم إضافة محتوى الخريطة لاحقاً
end

-- نظام الإشعارات المتطور
function MoonUI:CreateNotifications()
    self.NotificationFrame = Instance.new("Frame")
    self.NotificationFrame.Size = UDim2.new(0, 350, 1, -20)
    self.NotificationFrame.Position = UDim2.new(1, -370, 0, 10)
    self.NotificationFrame.BackgroundTransparency = 1
    self.NotificationFrame.ZIndex = 5
    self.NotificationFrame.Parent = self.MainScreen
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    layout.VerticalAlignment = Enum.VerticalAlignment.Top
    layout.Parent = self.NotificationFrame
end

-- إشعار متطور
function MoonUI:Notify(title, message, duration, notificationType)
    duration = duration or 5
    notificationType = notificationType or "Info"
    
    local colors = {
        Info = self.CurrentTheme.Info,
        Success = self.CurrentTheme
