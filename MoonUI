-- 🌙 MoonUI Library - النسخة المعدلة والمؤكدة
local MoonUI = {}

-- إصدار المكتبة
MoonUI.Version = "v2.2.0 Stable"

-- نظام الألوان
MoonUI.Themes = {
    Dark = {
        Primary = Color3.fromRGB(114, 137, 218),
        Secondary = Color3.fromRGB(78, 93, 148),
        Background = Color3.fromRGB(25, 28, 35),
        Card = Color3.fromRGB(35, 38, 45),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(200, 200, 200),
        Success = Color3.fromRGB(67, 181, 129),
        Error = Color3.fromRGB(240, 71, 71),
        Warning = Color3.fromRGB(255, 186, 0),
        Info = Color3.fromRGB(70, 170, 255)
    }
}

-- وظيفة إنشاء الواجهة الرئيسية
function MoonUI:Create(config)
    local self = setmetatable({}, {__index = MoonUI})
    
    -- الإعدادات الأساسية
    self.Config = {
        Name = config.Name or "MoonUI",
        Keybind = config.Keybind or Enum.KeyCode.RightShift,
        Theme = config.Theme or "Dark"
    }
    
    self.Elements = {}
    self.Tabs = {}
    self.IsOpen = false
    self.CurrentTheme = MoonUI.Themes[self.Config.Theme]
    
    -- خدمات الروبلوكس
    self.Players = game:GetService("Players")
    self.TweenService = game:GetService("TweenService")
    self.UserInputService = game:GetService("UserInputService")
    self.RunService = game:GetService("RunService")
    
    -- إنشاء الواجهة
    self:CreateMainUI()
    self:SetupInput()
    
    return self
end

-- إنشاء الواجهة الرئيسية
function MoonUI:CreateMainUI()
    -- الشاشة الرئيسية
    self.MainScreen = Instance.new("ScreenGui")
    self.MainScreen.Name = "MoonUI_Main"
    self.MainScreen.ResetOnSpawn = false
    self.MainScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    self.MainScreen.Parent = game:GetService("CoreGui")
    
    -- النافذة الرئيسية
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Size = UDim2.new(0, 450, 0, 550)
    self.MainFrame.Position = UDim2.new(0.5, -225, 0.5, -275)
    self.MainFrame.BackgroundColor3 = self.CurrentTheme.Background
    self.MainFrame.ClipsDescendants = true
    self.MainFrame.Visible = false
    self.MainFrame.ZIndex = 2
    self.MainFrame.Parent = self.MainScreen
    
    -- الزوايا المستديرة
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = self.MainFrame
    
    -- الظل
    local shadow = Instance.new("UIStroke")
    shadow.Color = Color3.new(0, 0, 0)
    shadow.Thickness = 3
    shadow.Transparency = 0.8
    shadow.Parent = self.MainFrame
    
    -- إنشاء المكونات
    self:CreateHeader()
    self:CreateContentArea()
    self:CreateToggleButton()
end

-- إنشاء رأس النافذة
function MoonUI:CreateHeader()
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = self.CurrentTheme.Card
    header.ZIndex = 3
    header.Parent = self.MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = header
    
    -- العنوان
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = self.Config.Name
    title.TextColor3 = self.CurrentTheme.Text
    title.TextSize = 18
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.ZIndex = 4
    title.Parent = header
    
    -- زر الإغلاق
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0.5, -15)
    closeBtn.BackgroundColor3 = self.CurrentTheme.Error
    closeBtn.Text = "×"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextSize = 20
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.ZIndex = 4
    closeBtn.Parent = header
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 6)
    btnCorner.Parent = closeBtn
    
    closeBtn.MouseButton1Click:Connect(function()
        self:Toggle()
    end)
end

-- إنشاء منطقة المحتوى
function MoonUI:CreateContentArea()
    -- تبويبات التنقل
    self.TabButtonsFrame = Instance.new("Frame")
    self.TabButtonsFrame.Size = UDim2.new(1, -20, 0, 40)
    self.TabButtonsFrame.Position = UDim2.new(0, 10, 0, 60)
    self.TabButtonsFrame.BackgroundColor3 = self.CurrentTheme.Card
    self.TabButtonsFrame.ZIndex = 3
    self.TabButtonsFrame.Parent = self.MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.TabButtonsFrame
    
    -- منطقة المحتوى الرئيسية
    self.ContentFrame = Instance.new("Frame")
    self.ContentFrame.Size = UDim2.new(1, -20, 1, -120)
    self.ContentFrame.Position = UDim2.new(0, 10, 0, 110)
    self.ContentFrame.BackgroundTransparency = 1
    self.ContentFrame.ZIndex = 2
    self.ContentFrame.Parent = self.MainFrame
    
    self.TabContent = Instance.new("Frame")
    self.TabContent.Size = UDim2.new(1, 0, 1, 0)
    self.TabContent.BackgroundTransparency = 1
    self.TabContent.Parent = self.ContentFrame
    
    local scrolling = Instance.new("ScrollingFrame")
    scrolling.Size = UDim2.new(1, 0, 1, 0)
    scrolling.BackgroundTransparency = 1
    scrolling.ScrollBarThickness = 4
    scrolling.ScrollBarImageColor3 = self.CurrentTheme.Primary
    scrolling.ScrollingDirection = Enum.ScrollingDirection.Y
    scrolling.Parent = self.TabContent
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = scrolling
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 5)
    padding.PaddingLeft = UDim.new(0, 5)
    padding.PaddingRight = UDim.new(0, 5)
    padding.Parent = scrolling
end

-- إنشاء زر تبديل
function MoonUI:CreateToggleButton()
    self.ToggleButton = Instance.new("TextButton")
    self.ToggleButton.Size = UDim2.new(0, 60, 0, 60)
    self.ToggleButton.Position = UDim2.new(1, -80, 0, 20)
    self.ToggleButton.BackgroundColor3 = self.CurrentTheme.Primary
    self.ToggleButton.Text = "🌙"
    self.ToggleButton.TextColor3 = Color3.new(1, 1, 1)
    self.ToggleButton.TextSize = 24
    self.ToggleButton.Font = Enum.Font.GothamBold
    self.ToggleButton.ZIndex = 10
    self.ToggleButton.Parent = self.MainScreen
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = self.ToggleButton
    
    local shadow = Instance.new("UIStroke")
    shadow.Color = Color3.new(0, 0, 0)
    shadow.Thickness = 3
    shadow.Transparency = 0.3
    shadow.Parent = self.ToggleButton
    
    self.ToggleButton.MouseButton1Click:Connect(function()
        self:Toggle()
    end)
end

-- إعدادات الإدخال
function MoonUI:SetupInput()
    self.UserInputService.InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == self.Config.Keybind then
            self:Toggle()
        end
    end)
end

-- التبديل بين فتح وإغلاق الواجهة
function MoonUI:Toggle()
    self.IsOpen = not self.IsOpen
    
    if self.IsOpen then
        self:Show()
    else
        self:Hide()
    end
end

-- إظهار الواجهة
function MoonUI:Show()
    self.MainFrame.Visible = true
    
    -- تأثير الظهور
    self.MainFrame.Size = UDim2.new(0, 0, 0, 0)
    self.MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    self.TweenService:Create(
        self.MainFrame,
        TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {
            Size = UDim2.new(0, 450, 0, 550),
            Position = UDim2.new(0.5, -225, 0.5, -275)
        }
    ):Play()
end

-- إخفاء الواجهة
function MoonUI:Hide()
    self.TweenService:Create(
        self.MainFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In),
        {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)}
    ):Play()
    
    task.spawn(function()
        wait(0.3)
        self.MainFrame.Visible = false
    end)
end

-- إنشاء تبويب جديد
function MoonUI:CreateTab(name, icon)
    local tab = {
        Name = name,
        Icon = icon or "⭐",
        Elements = {}
    }
    
    table.insert(self.Tabs, tab)
    return tab
end

-- إضافة زر
function MoonUI:AddButton(tab, config)
    local button = {
        Type = "Button",
        Name = config.Name,
        Callback = config.Callback
    }
    
    table.insert(tab.Elements, button)
    
    -- إنشاء الزر فعلياً في الواجهة
    self:CreateButtonElement(config.Name, config.Callback)
    
    return button
end

-- إضافة مفتاح تبديل
function MoonUI:AddToggle(tab, config)
    local toggle = {
        Type = "Toggle",
        Name = config.Name,
        Default = config.Default or false,
        Callback = config.Callback
    }
    
    table.insert(tab.Elements, toggle)
    
    -- إنشاء التoggle فعلياً في الواجهة
    self:CreateToggleElement(config.Name, config.Default, config.Callback)
    
    return toggle
end

-- إضافة منزلق
function MoonUI:AddSlider(tab, config)
    local slider = {
        Type = "Slider",
        Name = config.Name,
        Min = config.Min or 0,
        Max = config.Max or 100,
        Default = config.Default or 50,
        Callback = config.Callback
    }
    
    table.insert(tab.Elements, slider)
    
    -- إنشاء السلايدر فعلياً في الواجهة
    self:CreateSliderElement(config.Name, config.Min, config.Max, config.Default, config.Callback)
    
    return slider
end

-- إنشاء زر في الواجهة
function MoonUI:CreateButtonElement(name, callback)
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, -10, 0, 40)
    buttonFrame.BackgroundColor3 = self.CurrentTheme.Card
    buttonFrame.LayoutOrder = #self.Elements + 1
    buttonFrame.Parent = self.TabContent:FindFirstChildOfClass("ScrollingFrame")
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = buttonFrame
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = name
    button.TextColor3 = self.CurrentTheme.Text
    button.TextSize = 14
    button.Font = Enum.Font.Gotham
    button.Parent = buttonFrame
    
    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)
    
    table.insert(self.Elements, buttonFrame)
end

-- إنشاء toggle في الواجهة
function MoonUI:CreateToggleElement(name, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -10, 0, 40)
    toggleFrame.BackgroundColor3 = self.CurrentTheme.Card
    toggleFrame.LayoutOrder = #self.Elements + 1
    toggleFrame.Parent = self.TabContent:FindFirstChildOfClass("ScrollingFrame")
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = toggleFrame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = self.CurrentTheme.Text
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.Parent = label
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 25)
    toggleButton.Position = UDim2.new(1, -60, 0.5, -12.5)
    toggleButton.BackgroundColor3 = default and self.CurrentTheme.Success or Color3.fromRGB(80, 80, 80)
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0)
    toggleCorner.Parent = toggleButton
    
    local toggleState = default
    
    toggleButton.MouseButton1Click:Connect(function()
        toggleState = not toggleState
        toggleButton.BackgroundColor3 = toggleState and self.CurrentTheme.Success or Color3.fromRGB(80, 80, 80)
        
        if callback then
            callback(toggleState)
        end
    end)
    
    table.insert(self.Elements, toggleFrame)
end

-- إنشاء سلايدر في الواجهة
function MoonUI:CreateSliderElement(name, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -10, 0, 60)
    sliderFrame.BackgroundColor3 = self.CurrentTheme.Card
    sliderFrame.LayoutOrder = #self.Elements + 1
    sliderFrame.Parent = self.TabContent:FindFirstChildOfClass("ScrollingFrame")
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = sliderFrame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = name .. " (" .. default .. ")"
    label.TextColor3 = self.CurrentTheme.Text
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = sliderFrame
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.Parent = label
    
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(1, -20, 0, 10)
    sliderTrack.Position = UDim2.new(0, 10, 1, -25)
    sliderTrack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sliderTrack.Parent = sliderFrame
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(1, 0)
    trackCorner.Parent = sliderTrack
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = self.CurrentTheme.Primary
    sliderFill.Parent = sliderTrack
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = sliderFill
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new((default - min) / (max - min), -10, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.new(1, 1, 1)
    sliderButton.Text = ""
    sliderButton.Parent = sliderTrack
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(1, 0)
    buttonCorner.Parent = sliderButton
    
    local isDragging = false
    
    local function updateSlider(value)
        local percent = math.clamp((value - min) / (max - min), 0, 1)
        sliderFill.Size = UDim2.new(percent, 0, 1, 0)
        sliderButton.Position = UDim2.new(percent, -10, 0.5, -10)
        label.Text = name .. " (" .. math.floor(value) .. ")"
        
        if callback then
            callback(math.floor(value))
        end
    end
    
    sliderButton.MouseButton1Down:Connect(function()
        isDragging = true
    end)
    
    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = game:GetService("UserInputService"):GetMouseLocation()
            local trackPos = sliderTrack.AbsolutePosition
            local trackSize = sliderTrack.AbsoluteSize
            
            local percent = math.clamp((mousePos.X - trackPos.X) / trackSize.X, 0, 1)
            local value = min + (max - min) * percent
            
            updateSlider(value)
        end
    end)
    
    table.insert(self.Elements, sliderFrame)
end

-- إشعار
function MoonUI:Notify(title, message, duration, type)
    duration = duration or 5
    type = type or "Info"
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title,
        Text = message,
        Duration = duration,
        Icon = "rbxassetid://0"
    })
end

-- تغيير السمة
function MoonUI:ChangeTheme(themeName)
    if MoonUI.Themes[themeName] then
        self.CurrentTheme = MoonUI.Themes[themeName]
        self:Notify("السمة", "تم تغيير السمة إلى: " .. themeName, 3, "Success")
    end
end

return MoonUI
